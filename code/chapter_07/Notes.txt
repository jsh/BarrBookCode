Chapter 7: EC2 Monitoring, Auto Scaling, and Elastic Load Balancing

AWS Elastic Load Balancing (ELB) lets you aggregate instances and treat them as a single resource (an ELB volume), with the load balanced among components.

AWS EC2 CloudWatch lets you collect stats on your instances and volumes.

Auto Scaling lets your ELB volumes expand and contract in response to demand.

CloudWatch

When I started writing these notes, a couple of weeks ago, you still had to pay for CloudWatch. Now, Amazon's made the basic monitoring data free. That will give you some sense of the speed with which this is moving. (You can get even more data on your instance for a price.) 

The program list_metrics.php will run without further ado.

It's instructive to run it, capture the output, launch an ec2 instance, then run it again and watch the output change.
I've added some scripts to help with this:

nmetrics shows how many metrics are currently available for each instance.
launch_ec2_micro.php is a trimmed-down version of chapter_05's ec2_setup.php. It launches a micro instance without attaching an Elastic IP address or extra EBS volumes.
metrics-progress invokes launch_ec2_micro.php, to launch an instance, and then counts metrics every minute to watch them come on line. The script runs for 20 minutes, and the first metrics won't even come on line for almost 10, so you'll want to do this at home, not in the workshop.

See how the metrics become available in stages, rather than all at once?  Terminating your instance doesn't make the stats go away instantly, either.

If you select your instance on the AWS console, the monitoring tab, in the bottom pane, shows you graphs of some of these metrics.

Do not forget to terminate your instance when you finish this experiment.

Get the Tools

You'll need to install a bunch of Amazon, CLI toolkits before we go anywhere.

In general, you'll find AWS toolkits here:

http://aws.amazon.com/developertools

You need these:

Amazon EC2 API Tools
Amazon Cloudwatch API Tools
AutoScaling API Tools
Elastic Load Balancing API Tools

The script BarrBookCode/bin/get-AWS-CLI-toolkits.sh downloaded the toolkits I needed for this chapter.
You can use it, too, but it will go out-of-date as the toolkits get updated, which is often, so you'll need to update it as that happens. If you do that, please let me know so we can get it into the GitHub copy.

We're also going to do a bunch of Java, so you'll need to install a bunch of Amazon toolkits before we go anywhere.  Also the JRE.

"Oh, no! I don't know Java."

Me neither. Get over it.

You'll need a JRE. My Ubuntu box had it by default. You'll also need jmeter. On my Ubuntu box that's

sudo apt-get install jmeter-java

Once jmeter is installed, you have to do a bunch of clicky stuff to create a "test plan." It's in the book and I'm not going to re-type it here.

Is it a complete PITA that you can only do it as point-and-click? Yes, indeedy. Do you know a better way? Excellent. Please use your knowledge to re-write this paragraph.

The looong example at the end of the chapter, which shows off both Auto Scaling and Elastic Load Balancing, says that there is not yet PHP toolkit support for these two features.

There is now.  Look in AWSSDKforPHP/services and you'll see as.class.php and elb.class.php.
